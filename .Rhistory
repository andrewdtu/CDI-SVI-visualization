diff_arr = heatmap(CDI_2018,SVI_2018)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
View(heatmap_df)
install.packages('heatmaply')
library(heatmaply)
heatmaply(heatmap_df)
View(heatmap_df)
heatmaply(mtcars)
mtcars
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate_all(~replace(., is.na(.), 0))
heatmaply(heatmap_df)
View(diff_arr)
View(heatmap_df)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate_all(~replace( is.na(.), 0))
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate_all(~replace(., is.na(.), 0))
View(heatmap_df)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate_all(~replace(., is.nan(.), 0))
heatmaply(heatmap_df)
View(heatmap_df)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate_all(~replace(., is.nan(.), 0))
View(heatmap_df)
heatmap_df[is.nan(heatmap_df)] <- 0
typeof(heatmap_df)
View(heatmap_df)
heatmap = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
return(diff_arr)
}
diff_arr = heatmap(CDI_2018,SVI_2018)
heatmap_df = data_frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
heatmap_df = tibble(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
heatmap = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
return(diff_arr)
}
diff_arr = heatmap(CDI_2018,SVI_2018)
heatmap_df = data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
View(heatmap_df)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
heatmap_df[is.nan(heatmap_df)] <- 0
heatmap_df$Count[is.nan(dataset$Count)]<-0
heatmap_df$Count[is.nan(heatmap_df$Count)]<-0
heatmap_df$Count[is.nan(heatmap_df$Count),]<-0
heatmap_df$Count[,is.nan(heatmap_df$Count)]<-0
heatmap_df$Count[is.nan(heatmap_df$Count)]<-0
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
View(heatmap_df)
heatmap_df
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
heatmap_df$V4[is.nan(heatmap_df$rsqadj)]<-0
heatmap_df$V4[is.nan(heatmap_df$V4)]<-0
View(heatmap_df)
heatmap = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
return(diff_arr)
}
diff_arr = heatmap(CDI_2018,SVI_2018)
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
is.nan(heatmap_df$rsqadj)
View(heatmap_df)
heatmap_df$rsqadj
typeof(heatmap_df$rsqadj[1])
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate(slope = as.numeric(slope))%>%
mutate(rsqadj = as.numeric(rsqadj))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
View(heatmap_df)
View(heatmap_df)
heatmaply(heatmap_df)
View(heatmap_df)
ggplot(heatmap_df,aes(x=group1,y=group2))+
geom_tile()
heatmap = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate(slope = as.numeric(slope))%>%
mutate(rsqadj = as.numeric(rsqadj))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
return(heatmap_df)
}
diff_arr = heatmap(CDI_2018,SVI_2018)
heatmap_plot = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate(slope = as.numeric(slope))%>%
mutate(rsqadj = as.numeric(rsqadj))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
return(heatmap_df)
}
diff_arr = heatmap_plot(CDI_2018,SVI_2018)
typeof(heatmap_df$rsqadj[1])
heatmaply(heatmap_df
)
heatmaply(heatmap_df%>%select(group1,group2,slope))
heatmap(heatmap_df%>%select(group1,group2,slope))
library(plotly)
heatmap(heatmap_df%>%select(group1,group2,slope))
View(heatmap_plot)
View(heatmap)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(usmap)
library(ggpmisc)
library(plotly)
library(heatmaply)
#
#
# county_SVI = read_csv(
#   url('https://svi.cdc.gov/Documents/Data/2020_SVI_Data/CSV/SVI2020_US_COUNTY.csv')
#   )%>%
#   write_csv('SVI2020_US_COUNTY.csv')
#
# census_SVI = read_csv(url('https://svi.cdc.gov/Documents/Data/2020_SVI_Data/CSV/SVI2020_US.csv'))%>%
#   write_csv('SVI2020_US.csv')
#
# CDI_data = read_csv(url('https://data.cdc.gov/api/views/g4ie-h725/rows.csv'))%>%
#   write_csv('CDI_data.csv')
# county_SVI = read_csv(
#   url('https://svi.cdc.gov/Documents/Data/2018_SVI_Data/CSV/SVI2018_US_COUNTY.csv')
#   )%>%
#   write_csv('SVI2018_US_COUNTY.csv')
#census_SVI = read_csv('SVI2020_US.csv')
#county_SVI = read_csv('SVI2018_US_COUNTY.csv')
CDI_fulldata = read_csv('CDI_data.csv')
#CDI_data = read_csv('CDI_2018.csv')
#CDI_fulldata = read_csv('CDI_data.csv')
SVI_2010 = read_csv('SVI2010_US.csv')%>%
mutate(year = 2010)
SVI_2014 = read_csv('SVI2014_US_COUNTY.csv')%>%
mutate(year = 2014)
SVI_2016 = read_csv('SVI2016_US_COUNTY.csv')%>%
mutate(year = 2016)
SVI_2018 = read_csv('SVI2018_US_COUNTY.csv')%>%
mutate(year = 2018)
SVI_2020 = read_csv('SVI2020_US_COUNTY.csv')%>%
mutate(year = 2020)
# read_csv("CDI_2018.csv")%>%
#   filter(Topic == 'Cardiovascular Disease')%>%
#   #group_by(Question)%>%
#   filter(Question =='Mortality from total cardiovascular diseases')%>%
#   filter(DataValueTypeID == 'AGEADJRATE')%>%
#   filter(is.na(DatavalueFootnote))
state_SVI = SVI_2018%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
CDI_2018 = read_csv("CDI_2018.csv")
heart = CDI_2018%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
#dont need this line in app
filter(is.na(DatavalueFootnote))%>%
select(LocationAbbr,Stratification1,DataValue)%>%
pivot_wider(names_from = Stratification1,values_from = DataValue)%>%
mutate(state = LocationAbbr)%>%
left_join(state_SVI,"state")
heatmap_plot = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate(slope = as.numeric(slope))%>%
mutate(rsqadj = as.numeric(rsqadj))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
return(heatmap_df)
}
diff_arr = heatmap_plot(CDI_2018,SVI_2018)
library(plotly)
heatmap(heatmap_df%>%select(group1,group2,slope))
library(plotly)
heatmap(diff_arr%>%select(group1,group2,slope))
View(diff_arr)
typeof(diff_arr$rsqadj[1])
typeof(diff_arr$slope[1])
heatmap(diff_arr)
heatmap.2(diff_arr)
library(gplots)
library(gplots)
heatmap.2(diff_arr)
heatmap_df = heatmap_plot(CDI_2018,SVI_2018)
ggplot(heatmap_df,aes(x=group1,y=group2,fill = slope,size = rsqadj))+
geom_tile()
ggplotly(p)
p <-ggplot(heatmap_df,aes(x=group1,y=group2,fill = slope,size = rsqadj))+
geom_tile()
ggplotly(p)
heatmap_plot = function(cdi, svi){
df = cdi%>%
mutate(state = LocationAbbr)%>%
filter(Topic == 'Cardiovascular Disease')%>%
#group_by(Question)%>%
filter(Question =='Mortality from total cardiovascular diseases')%>%
filter(DataValueTypeID == 'AGEADJRATE')%>%
select(state,Stratification1,DataValue)
svi = svi%>%
group_by(ST_ABBR)%>%
filter(SPL_THEMES>0)%>%
mutate(popxsvi = E_TOTPOP*SPL_THEMES)%>%
summarise(state_totpop = sum(E_TOTPOP),state_SVI = sum(popxsvi)/state_totpop)%>%
mutate(state = ST_ABBR)%>%
select(state,state_SVI)
states = unique(df$state)
groups = unique(df$Stratification1)
diff_arr = list()
for (i in groups){
g1 = df%>%
filter(Stratification1 == i)
for (j in groups){
g2 = df%>%
filter(Stratification1 == j)%>%
left_join(g1,"state")%>%
mutate(diff = DataValue.x - DataValue.y)%>%
left_join(svi,"state")%>%
select(Stratification1.x,Stratification1.y,diff,state_SVI)
#print(g1)
#print(g2)
slope = summary(lm(diff~state_SVI,g2))$coefficients[2]
rsqadj = summary(lm(diff~state_SVI,g2))$adj.r.squared
diff_arr = append(diff_arr,list(c(i,j,slope,rsqadj)))
}
}
heatmap_df = as.data.frame(do.call(rbind,diff_arr))%>%
rename(c("group1" = V1,
"group2" = V2,
"slope" = V3,
"rsqadj" = V4))%>%
mutate(slope = as.numeric(slope))%>%
mutate(rsqadj = as.numeric(rsqadj))
heatmap_df$rsqadj[is.nan(heatmap_df$rsqadj)]<-0
p <-ggplot(heatmap_df,aes(x=group1,y=group2,fill = slope,size = rsqadj))+
geom_tile()
return(ggplotly(p))
}
heatmap_plot(CDI_2018,SVI_2018)
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
